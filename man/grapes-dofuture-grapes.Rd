% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dofuture_OP.R
\name{\%dofuture\%}
\alias{\%dofuture\%}
\title{Loop over a Foreach Expression using Futures}
\usage{
foreach \%dofuture\% expr
}
\arguments{
\item{foreach}{A \code{foreach} object created by \code{\link[foreach:foreach]{foreach::foreach()}}
and \code{\link[foreach:foreach]{foreach::times()}}.}

\item{expr}{An R expression.}
}
\value{
The value of the foreach call.
}
\description{
Loop over a Foreach Expression using Futures
}
\details{
This is a replacement for \code{\link{\%dopar\%}} of the \pkg{foreach} package
that leverages the \pkg{future} framework.

When using \verb{\%dofuture\%}:
\itemize{
\item there is no need to use \code{registerDoFuture()}
\item there is no need to use \verb{\%dorng\%} of the \strong{doRNG} package
(but you need to specify \code{.options.future = list(seed = TRUE)}
whenever using random numbers in the \code{expr} expression)
\item global variables and packages are identified automatically by
the \pkg{future} framework
}
}
\examples{
\donttest{
plan(multisession)  # parallelize futures on the local machine

y <- foreach(x = 1:10, .combine = rbind) \%dofuture\% {
  y <- sqrt(x)
  data.frame(x = x, y = y, pid = Sys.getpid())
}
print(y)


## Random number generation
y <- foreach(i = 1:3, .combine = rbind, .options.future = list(seed = TRUE)) \%dofuture\% {
  data.frame(i = i, random = runif(n = 1L)) 
}
print(y)

## Random number generation with the foreach() \%:\% nested operator
y <- foreach(i = 1:3, .combine = rbind) \%:\%
       foreach(j = 3:5, .combine = rbind, .options.future = list(seed = TRUE)) \%dofuture\% {
  data.frame(i = i, j = j, random = runif(n = 1L)) 
}
print(y)

## Random number generation with the nested foreach() calls
y <- foreach(i = 1:3, .combine = rbind, .options.future = list(seed = TRUE)) \%dofuture\% {
  foreach(j = 3:5, .combine = rbind, .options.future = list(seed = TRUE)) \%dofuture\% {
    data.frame(i = i, j = j, random = runif(n = 1L)) 
  }
}
print(y)

}

\dontshow{
## R CMD check: make sure any open connections are closed afterward
if (!inherits(plan(), "sequential")) plan(sequential)
}
}
